<?php
	include("./lib/sc2ranks.php"); // Include sc2ranks api library
	
	// Turn on error reporting
	ini_set('display_errors', 1);
	error_reporting(E_ALL|E_STRICT);
	
	/**
	 * Helper function, replaces info in database with new data and returns new
	 * data.
	 * @param int $uid the user to whose information to update
	 * @return object the user sc2ranks data object, as mapped from the schema
	 */
	function helper_update_sc2ranks($uid){
		// TODO Make these accessible via the module configuration
		/*
		 * Start variables that should be configuration exposed
		 */
		$cache_expiration = 60*60*24*7; // One week
		$request = new sc2ranks_request($appkey);
		$app_key = "asustarcraft.com";
		$current_time = time();
		/*
		 * End variables that should be configuration exposed
		 */
		
		// Get the data from the db table
		// Build the query to get the user's bnet info
		$result = db_query(
					'SELECT {profile_fields}.name, {profile_values}.value
					FROM {profile_values}, {profile_fields}
					WHERE {profile_values}.uid = %d 
						AND {profile_fields}.fid = {profile_values}.fid
						AND ({profile_fields}.name = %s
						OR {profile_fields}.name = %s)',
					$uid, $name_profile_field, $code_profile_field);
				if($result){
					$char_name = "";
					$char_code = 0;
					$char_info = db_fetch_object($result);
					if($char_info){
						if ($char_info->name == $name_profile_field){
							$char_name = $char_info->value;
							$char_info = db_fetch_object($result);
							$char_code = $char_info->value;
						} else if ($char_info->name == $code_profile_field) {
							$char_code = $char_info->value;
							$char_info = db_fetch_object($result);
							$char_name = $char_info->value;
						} else {
							trigger_error("db_fetch_object returned unknown character information object format.", E_USER_ERROR);
						}
					} else {
						// Error fetching db object
						trigger_error("Could not fetch object from result set.", E_USER_ERROR);
					}
				} else {
					// Error we couldn't find user info the database anymore
					// but we have some expired cache data for him
					trigger_error("Could not find user battle.net info in database.", E_USER_NOTICE);
				}
		// Update the data from the sc2ranks site
		$request = new sc2ranks_request($app_key);
		$new_char_data = $request->get_character_data($char_name, $char_code);
		$new_team_data = $request->get_bracket_data();
		// pack the info
		$to_save = array(
			'uid' => $uid, 
			'league' => $new_team_data->league,
			'points' => $new_team_data->points,
			'division' => $new_team_data->division,
			'wins' => $new_team_data->wins,
			'loses' => $new_team_data->losses,
			'modified' => $current_time);
		// Insert or update into database
		drupal_write_record("{sc2ranks}", $to_save, $uid)
		return $to_save;
	}

	/**
	 * Helper function, checks if sc2ranks data in database is not expired, if
	 * not then it returns the data from database otherwise updates info in db
	 * and returns the updated info.
	 * @param int $uid the drupal user id of the user who's record we want
	 * @return object the user sc2ranks data object, as mapped from the schema
	 */
	function helper_get_sc2ranks($uid){
		/*
		 * Start variables that should be configuration exposed
		 */
		$cache_expiration = 60*60*24*7; 				// One week
		$current_time = time();							// Now, to calc cache
		$name_profile_field = "profile_character";		// The profile field for character name
		$code_profile_field = "profile_character_code";	// The profile field for character code
		/*
		 * End variables that should be configuration exposed
		 */
		
		$result = db_query('SELECT * FROM {sc2ranks} WHERE uid = %d', $uid);
		// Refer to sc2ranks.install for database schema
		if($user = db_fetch_object($result)){
			if (($user.modified - $current_time) >= $cache_expiration){
				return helper_update_sc2ranks($uid);
			} else {
				// Data is valid
				return $user;
			}
		} else {
			// User not in cache database
			// Create new cache entry
			return helper_update_sc2ranks($uid);
		}
	}

	/**
	 * Implementation of hook_user
	 * Adds user to cache table is creating a new user, Checks if the user data
	 * is up to date if displaying user info on a profile.
	 */
	function sc2ranks_user($op, &$edit, &$account, $category = NULL){
		if($op == "view"){
			// If user account being viewed then let's append our data
			$uid = $account->uid;
			$account_data = helper_get_sc2ranks($uid);
			$account->content["sc2ranks"] = $account_data;
		}
	}
?>
